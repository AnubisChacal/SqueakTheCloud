#!/bin/bash

# ================== GCP_shave ==================

echo -e "\033[0;32m"
cat << "EOF"
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°§‚†¥‚°ø‚†ì‚†∂‚†æ‚†ø‚†∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ñ‚†ã‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†∑‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£§‚£ø‚†ñ‚†ª‚†∑‚°∂‚£Æ‚°ô‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ö‚°Ø‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢∑‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∞‚†ø‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†Ä‚†â‚†â‚†õ‚†ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚£æ‚£â‚†≥‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£Ö‚°Ä‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£¥‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢∑‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà    ‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñÑ‚ñÑ‚ñÑ       ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ     ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñë ‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà        ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñà‚ñì     ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà    ‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¥‚£ø‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£≥‚£æ‚†ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚†ø‚†ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚ñí‚ñà‚ñà    ‚ñí ‚ñí‚ñà‚ñà‚ñì  ‚ñà‚ñà‚ñí ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ     ‚ñà‚ñà‚ñÑ‚ñà‚ñí      ‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ       ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà  ‚ñì‚ñà‚ñà‚ñí    ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚†ñ‚†ã‚†Å‚¢Ä‚£º‚°ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚¢∂‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£¥‚°í‚†í‚†∂‚£§‚£ø‚†Ä‚†Ä‚†Ä‚†Ä ‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà  ‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë      ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà         ‚ñí‚ñì‚ñà    ‚ñÑ ‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà   ‚ñà‚ñå
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†è‚†Å‚†Ä‚¢Ä‚£†‚£º‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£§‚†Ä‚†Ä‚†Ä‚†§‚†ñ‚†ö‚†â‚†â‚£Ä‚°†‚†§‚†í‚¢≤‚°Ü‚†Å‚¢Ä‚°¥‚¢©‚°ø‚¢§‚°Ä‚†Ä‚†Ä   ‚ñí   ‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà  ‚ñà‚ñÄ ‚ñë‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñí‚ñì‚ñà  ‚ñÑ‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñì‚ñà‚ñà ‚ñà‚ñÑ ‚ñë      ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë‚ñì‚ñà ‚ñë‚ñà‚ñà ‚ñí‚ñì‚ñà  ‚ñÑ       ‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñì‚ñà‚ñÑ   ‚ñå
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†ã‚†Ä‚¢Ä‚£¥‚†û‚†ã‚†â‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ω‚£ü‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†ñ‚†ã‚†Å‚¢Ä‚£§‚£æ‚£•‚†§‚†¥‚†õ‚†ã‚†â‚†ô‚£Ü‚†â‚†¢‚°Ñ ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñí‚ñà‚ñÑ ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ       ‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë‚ñì‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí      ‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì 
    ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ü‚†Å‚¢†‚°æ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚£º‚°á‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°î‚†ã‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢Ü‚†Ä‚†à ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë‚ñë‚ñë ‚ñí‚ñí‚ñë ‚ñí ‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñí ‚ñí‚ñí ‚ñì‚ñí       ‚ñí ‚ñë‚ñë    ‚ñí ‚ñë‚ñë‚ñí‚ñë‚ñí‚ñë‚ñë ‚ñí‚ñë ‚ñë      ‚ñë ‚ñë‚ñí ‚ñí  ‚ñë‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí  ‚ñí‚ñí‚ñì  ‚ñí
    ‚†Ä‚†Ä‚†Ä‚£¥‚†ã‚¢Ä‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†ø‚¢õ‚££‚£Ñ‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚¢®‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢†‚£Ñ‚£¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ü‚†Ä ‚ñë ‚ñë‚ñí  ‚ñë ‚ñë ‚ñë ‚ñí‚ñë  ‚ñë ‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë  ‚ñë ‚ñë  ‚ñë ‚ñí   ‚ñí‚ñí ‚ñë‚ñë ‚ñë‚ñí ‚ñí‚ñë         ‚ñë     ‚ñí ‚ñë‚ñí‚ñë ‚ñë ‚ñë ‚ñë  ‚ñë        ‚ñë  ‚ñí   ‚ñë ‚ñë ‚ñí  ‚ñë  ‚ñë ‚ñí ‚ñí‚ñë ‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë  ‚ñë ‚ñí  ‚ñí
    ‚†Ä‚†Ä‚£º‚†á‚¢Ä‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚£ø‚†Ä‚†à‚†à‚¢ª‚£ü‚†â‚†â‚†â‚†â‚†â‚†õ‚†ª‚¢∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚¢†‚£∂‚†è‚¢∏‚†õ‚†õ‚†í‚¢≤‚£∂‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚ñë  ‚ñë  ‚ñë     ‚ñë   ‚ñë  ‚ñë‚ñë‚ñë ‚ñë ‚ñë    ‚ñë    ‚ñë   ‚ñí   ‚ñë ‚ñë‚ñë ‚ñë        ‚ñë       ‚ñë  ‚ñë‚ñë ‚ñë   ‚ñë         ‚ñë          ‚ñë ‚ñë   ‚ñë ‚ñë ‚ñë ‚ñí   ‚ñë‚ñë‚ñë ‚ñë ‚ñë  ‚ñë ‚ñë  ‚ñë 
    ‚†Ä‚¢†‚°ü‚†Ä‚£∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ü‚†Ä‚†Ä‚†Ä‚°Ä‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚£ø‚£Ä‚¢Ä‚£Ä‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£æ‚£ø‚£ø‚£Ñ‚£†‚£è‚†Ä‚†Ä‚†Ä‚†∫‚£Ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä       ‚ñë      ‚ñë       ‚ñë        ‚ñë  ‚ñë     ‚ñë  ‚ñë‚ñë  ‚ñë                  ‚ñë  ‚ñë  ‚ñë   ‚ñë  ‚ñë      ‚ñë ‚ñë          ‚ñë  ‚ñë    ‚ñë ‚ñë     ‚ñë        ‚ñë  
    ‚†Ä‚£∏‚°á‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ß‚†ò‚£∑‚£§‚¢π‚£Ñ‚¢ª‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†ª‚£Ø‚£§‚£¥‚£¶‚£æ‚†∑‚£ø‚°ã‚†Ä‚†Ä‚†à‚†â‚¢π‚£ø‚£¶‚£ø‚†õ‚¢∑‚£¨‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                                                                          ‚ñë                                   ‚ñë  
    ‚†Ä‚£ø‚°á‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ß‚°è‚†ô‚¢ø‚†ü‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£Ø‚°Ä‚†Ä‚†Ä‚†à‚¢ø‚°∑‚£¶‚°Ä‚†Ä‚¢∏‚†Ä‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚¢ª‚°á‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°è‚†Ä‚£á‚†ò‚°Ü‚¢≥‚£¨‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚£∏‚°á‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚°æ‚¢ª‚£∂‚†ø‚£∂‚°è‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚†Ä‚£ø‚†É‚°æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Å‚†Ä‚†â‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    ‚£º‚£è‚°º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚£º‚£ø‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä

EOF
echo -e "\e[0m"

get_token() {
  curl -s -H "Metadata-Flavor: Google" \
    "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token" --max-time 3 --retry 3
}

get_service_account() {
  curl -s -H "Metadata-Flavor: Google" \
    "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/" | head -n1
}

export_credentials() {
  ACCESS_TOKEN=$(echo "$1" | jq -r .access_token)
  EXPIRATION=$(echo "$1" | jq -r .expires_in)

  export GCP_ACCESS_TOKEN=$ACCESS_TOKEN
  export CLOUDSDK_AUTH_ACCESS_TOKEN=$ACCESS_TOKEN

  mkdir -p ~/.config/gcloud
  cat > ~/.config/gcloud/access_token.json <<EOF
{
  "access_token": "$ACCESS_TOKEN",
  "expires_in": $EXPIRATION,
  "token_type": "Bearer"
}
EOF
}

list_gcp_resources() {
  echo -e "${CYAN}Enumerando recursos GCP...${RESET}"

  gcloud projects list
  gcloud compute instances list
  gcloud compute networks list
  gcloud compute firewall-rules list
  gcloud compute addresses list

  echo -e "${BLUE}[*] Verificando buckets...${RESET}"
  buckets=$(gcloud storage buckets list --format="value(name)")

  if [[ -n "$buckets" ]]; then
    echo -e "${GREEN}[+] Buckets encontrados:${RESET}"
    echo "$buckets"
    list_buckets_and_objects_json  # üî• Chama sua fun√ß√£o que monta o JSON
  else
    echo -e "${YELLOW}[-] Nenhum bucket encontrado.${RESET}"
  fi

  gcloud sql instances list
  gcloud functions list
  gcloud pubsub topics list
  gcloud pubsub subscriptions list
  gcloud iam service-accounts list
  gcloud kms keyrings list --locations=global
  gcloud dns managed-zones list
  gcloud container clusters list
  gcloud logging sinks list
}

run_gcp_shave() {

  echo -e "${BLUE}[*] Obtendo token da metadata API...${RESET}"
  TOKEN_RESPONSE=$(get_token)
  if [[ -z "$TOKEN_RESPONSE" ]]; then
    echo -e "${RED}[X] Erro: N√£o foi poss√≠vel obter o token.${RESET}"
    exit 1
  fi
  echo -e "${GREEN}[+] Token obtido com sucesso.${RESET}"

  echo -e "${BLUE}[*] Identificando Service Account vinculada...${RESET}"
  SERVICE_ACCOUNT=$(get_service_account)
  if [[ -z "$SERVICE_ACCOUNT" ]]; then
    echo -e "${RED}[X] Erro: N√£o foi poss√≠vel obter a Service Account.${RESET}"
    exit 1
  fi
  echo -e "${GREEN}[+] Service Account: $SERVICE_ACCOUNT${RESET}"

  echo -e "${BLUE}[*] Exportando credenciais...${RESET}"
  export_credentials "$TOKEN_RESPONSE"
  echo -e "${GREEN}[+] Credenciais exportadas com sucesso.${RESET}"

  echo -e "${YELLOW}[!] Iniciando enumera√ß√£o dos recursos GCP...${RESET}"
  list_gcp_resources

  echo -e "${GREEN}[‚úì] Enumera√ß√£o GCP finalizada.${RESET}"
}


list_buckets_and_objects_json() {
    echo "[+] Enumerando Buckets e Objetos da GCP..."

    output="["

    # Lista todos os buckets do projeto atual
    buckets=$(gsutil ls 2>/dev/null | sed 's/gs:\/\///g')

    if [[ -z "$buckets" ]]; then
        echo "[-] Nenhum bucket encontrado ou falta de permiss√£o."
        return
    fi

    for bucket in $buckets; do
        echo "[*] Bucket encontrado: $bucket"

        output+="
        {
            \"Nome_bucket\": \"$bucket\",
            \"Objetos_bucket\": ["
        
        objetos=$(gsutil ls gs://$bucket 2>/dev/null)

        if [[ -z "$objetos" ]]; then
            output+="\"<vazio>\""
        else
            for obj in $objetos; do
                nome_obj=$(basename "$obj")
                output+="\"$nome_obj\","
            done
            output=${output%,}  # Remove a √∫ltima v√≠rgula
        fi

        output+="]
        },"
    done

    output=${output%,}  # Remove a √∫ltima v√≠rgula

    output+="
]"

    # Salva o JSON em um arquivo
    echo -e "$output" > buckets.json
    echo "[+] Resultado salvo em buckets.json"
}


 
run_gcp_shave
